<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" x:Class="ArmaduraLosaRevit.Model.GRIDS.WPF_CambiarNombreGrid.UI_CambiarNombreGrid"
    xmlns:local1="clr-namespace:ArmaduraLosaRevit.Model.Enumeraciones"
    xmlns:localUtil="clr-namespace:ArmaduraLosaRevit.Model.GRIDS.CambiarNombre.WPF_CambiarNombreGrid.Util"

    mc:Ignorable="d"
    xmlns:view="clr-namespace:ArmaduraLosaRevit.Model.WPF.Componentes"
    Title="Formato entrega" Height="800" Width="800" WindowStartupLocation="CenterScreen"
    xmlns:System="clr-namespace:System;assembly=mscorlib" 

    Background="White"
    Foreground="Gray" FontSize="12"
    Name="Formato" Icon="/ArmaduraLosaRevit.Model;component/Resources/revit-wire.ico">


    <Window.Resources>
        <localUtil:DoubleToSingleDecimalConverter x:Key="DoubleToSingleDecimalConverter"/>
    </Window.Resources>
    <!-- https://stackoverflow.com/questions/6488408/wpf-check-list-box-->
    <!--Closing="Window_Closing"-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <!-- MAIN TAB CONTROLS-->
        <Border BorderBrush="#FFACACAC" BorderThickness="1" Height="32" VerticalAlignment="Top" Margin="0,0,0,0" />


        <TabControl x:Name="tabnh"  BorderBrush="{x:Null}" Background="{x:Null}"  Grid.Column="0" Grid.Row="0"  >


            <TabItem x:Name="TabItemHorizontal"   BorderBrush="Black" Margin="0,-2,-4,-2"    Padding="5,0,5,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Width="80" ToolTip="Elementos seleccionados que contengas parametro. TIPO DE ESTRUCTURA (VISTA)= '05_ARMADURA DE ELEVACION'  --> (ELEV) ">
                        <Image Source="/ArmaduraLosaRevit.Model;component/Resources/terminal.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                               Height="13" />
                        <Label Content="Horizontal"  BorderBrush="#FFACACAC" />
                    </StackPanel>
                </TabItem.Header>

                <GroupBox  x:Name="Datos_elevHorizontal" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Header="Datos"  Margin="10,5,10,5"  >

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="30" />

                            <RowDefinition Height="1*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="95" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition  Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="90" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>


                        <CheckBox Name="SeleccionTodos_elevHorizontal" Grid.Row="1" Grid.Column="1" IsChecked="false"  VerticalAlignment="Bottom" >Todos</CheckBox>

                        <DataGrid x:Name="dataGrid1Horizontal" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="5"  AutoGenerateColumns="False" CanUserAddRows="False"  ItemsSource="{Binding ListaGridHorizontal}"
                                  Sorting="dataGrid1Horizontal_Sorting" 
                                  ColumnReordering="dataGrid1Horizontal_ColumnReordering">
                            <DataGrid.Columns>
                                <!-- a)este caso no cambia el estado de la propiedad actual
                                    <DataGridCheckBoxColumn Header="Estado" Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGridCheckBoxColumn.ElementStyle>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.ElementStyle>
                                </DataGridCheckBoxColumn>-->

                                <!--b) caso funconado el cambio de estado de lapropuedad-->
                                <DataGridTemplateColumn Header="Cambiar">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--c) codigo muestra como aplicar  eventos al check box, sebe ser lo mismo para el resto de tool
                                   <DataGridTemplateColumn Header="Cambiar">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->

                                <DataGridTextColumn Header="Coordenada"   Binding="{Binding CoordeParaOrden, Converter={StaticResource DoubleToSingleDecimalConverter}}" IsReadOnly="True" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>

                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Gris Actual"   Binding="{Binding Nombre_Actual}" IsReadOnly="True" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>

                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Gris NUevo"   Binding="{Binding Nombre_Nuevo, Mode=TwoWay}" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCambiarColor}" Value="True">
                                                    <Setter Property="Background" Value="#FF50F150"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsCambiarColor}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Vistas">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ItemsControl ItemsSource="{Binding ListaGridAsociadosObs}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" 
                                                                    VerticalAlignment="Center"
                                                                    >
                                                            <TextBox Text="{Binding Nombre_Nuevo, Mode=TwoWay}" VerticalContentAlignment="Center" Width="250">
                                                                <TextBox.Style>
                                                                    <Style TargetType="TextBox">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsCambiarColor}" Value="True">
                                                                                <Setter Property="Background"  Value="#FFE0B2B2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsCambiarColor}" Value="False">
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>
                                                            <Label Margin="5,0,0,0">Visualizaon:</Label>
                                                            <RadioButton  VerticalContentAlignment="Center" Checked="OnPrenderView">On</RadioButton>
                                                            <RadioButton  IsChecked="True" VerticalContentAlignment="Center"  Margin="5,0,5,0"  Checked="OnOcutarView">Off   </RadioButton>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Name="bton_Horizontal" Grid.Row="4" Grid.Column="2"   Height="25" Click="BExternalMethod1_Click" Width="60"  HorizontalAlignment="Center" Content="Cambiar"  Background="#FFE1E1E1" BorderBrush="#FFB2B2B2"></Button>
                        <Button Name="Cerrar_Horizontal" Grid.Row="4" Grid.Column="4"   Height="25"  Width="60"  HorizontalAlignment="Center" Content="Cerrar" Click="Cerrar_estruc_Click"  Background="#FFE1E1E1" BorderBrush="#FFB2B2B2"></Button>

                    </Grid>

                </GroupBox>

            </TabItem>

            <TabItem x:Name="TabItemVertical"   BorderBrush="Black" Margin="0,-2,-4,-2"    Padding="5,0,5,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Width="80" ToolTip="Elementos seleccionados que contengas parametro. TIPO DE ESTRUCTURA (VISTA)= '05_ARMADURA DE ELEVACION'  --> (ELEV) ">
                        <Image Source="/ArmaduraLosaRevit.Model;component/Resources/terminal.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                               Height="13" />
                        <Label Content="Vertical"  BorderBrush="#FFACACAC" />
                    </StackPanel>
                </TabItem.Header>

                <GroupBox  x:Name="Datos_elevVertical" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Header="Datos"  Margin="10,5,10,5"  >

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="30" />

                            <RowDefinition Height="1*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="95" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition  Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="90" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>


                        <CheckBox Name="SeleccionTodos_elevVertical" Grid.Row="1" Grid.Column="1" IsChecked="false"  VerticalAlignment="Bottom" >Todos</CheckBox>

                        <DataGrid x:Name="dataGrid1Vertical" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="5"  AutoGenerateColumns="False" CanUserAddRows="False"  ItemsSource="{Binding ListaGridVerticales}">
                            <DataGrid.Columns>
                                <!-- a)este caso no cambia el estado de la propiedad actual
                                    <DataGridCheckBoxColumn Header="Estado" Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGridCheckBoxColumn.ElementStyle>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.ElementStyle>
                                </DataGridCheckBoxColumn>-->

                                <!--b) caso funconado el cambio de estado de lapropuedad-->
                                <DataGridTemplateColumn Header="Cambiar">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--c) codigo muestra como aplicar  eventos al check box, sebe ser lo mismo para el resto de tool
                                   <DataGridTemplateColumn Header="Cambiar">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                                <DataGridTextColumn Header="Coordenada"   Binding="{Binding CoordeParaOrden, Converter={StaticResource DoubleToSingleDecimalConverter}}" IsReadOnly="True" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>

                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Gris Actual"   Binding="{Binding Nombre_Actual}" IsReadOnly="True" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>

                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Gris NUevo"   Binding="{Binding Nombre_Nuevo, Mode=TwoWay}" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCambiarColor}" Value="True">
                                                    <Setter Property="Background" Value="#FF50F150"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsCambiarColor}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Vistas">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ItemsControl ItemsSource="{Binding ListaGridAsociadosObs}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" 
                                                                    VerticalAlignment="Center"
                                                                    >
                                                            <TextBox Text="{Binding Nombre_Nuevo, Mode=TwoWay}" VerticalContentAlignment="Center" Width="250">
                                                                <TextBox.Style>
                                                                    <Style TargetType="TextBox">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsCambiarColor}" Value="True">
                                                                                <Setter Property="Background"  Value="#FFE0B2B2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsCambiarColor}" Value="False">
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>
                                                            <Label Margin="5,0,0,0">Visualizaon:</Label>
                                                            <RadioButton  VerticalContentAlignment="Center" Checked="OnPrenderView">On</RadioButton>
                                                            <RadioButton IsChecked="True" VerticalContentAlignment="Center"  Margin="5,0,5,0"  Checked="OnOcutarView">Off</RadioButton>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Name="bton_cambiarVertical" Grid.Row="4" Grid.Column="2"   Height="25" Click="BExternalMethod1_Click" Width="60"  HorizontalAlignment="Center" Content="Cambiar"  Background="#FFE1E1E1" BorderBrush="#FFB2B2B2"></Button>
                        <Button Name="CerrarVertical" Grid.Row="4" Grid.Column="4"   Height="25"  Width="60"  HorizontalAlignment="Center" Content="Cerrar" Click="Cerrar_estruc_Click"  Background="#FFE1E1E1" BorderBrush="#FFB2B2B2"></Button>

                    </Grid>

                </GroupBox>

            </TabItem>
            <TabItem x:Name="TabItemGridOtro"   BorderBrush="Black" Margin="0,-2,-4,-2"    Padding="5,0,5,0">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Width="80" ToolTip="Elementos seleccionados que contengas parametro. TIPO DE ESTRUCTURA (VISTA)= '05_ARMADURA DE ELEVACION'  --> (ELEV) ">
                        <Image Source="/ArmaduraLosaRevit.Model;component/Resources/terminal.png" VerticalAlignment="Center" HorizontalAlignment="Center"
                               Height="13" />
                        <Label Content="Otro"  BorderBrush="#FFACACAC" />
                    </StackPanel>
                </TabItem.Header>

                <GroupBox  x:Name="Datos_elevOtro" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Header="Datos"  Margin="10,5,10,5"  >

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="30" />

                            <RowDefinition Height="1*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="95" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition  Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="90" />
                            <ColumnDefinition Width="10" />
                        </Grid.ColumnDefinitions>


                        <CheckBox Name="SeleccionTodos_elevOtro" Grid.Row="1" Grid.Column="1" IsChecked="false"  VerticalAlignment="Bottom" >Todos</CheckBox>

                        <DataGrid x:Name="dataGrid1Otro" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="5"  AutoGenerateColumns="False" CanUserAddRows="False"  ItemsSource="{Binding ListaGridOtros}">
                            <DataGrid.Columns>
                                <!-- a)este caso no cambia el estado de la propiedad actual
                                    <DataGridCheckBoxColumn Header="Estado" Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGridCheckBoxColumn.ElementStyle>
                                        <Style TargetType="CheckBox">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridCheckBoxColumn.ElementStyle>
                                </DataGridCheckBoxColumn>-->

                                <!--b) caso funconado el cambio de estado de lapropuedad-->
                                <DataGridTemplateColumn Header="Cambiar">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--c) codigo muestra como aplicar  eventos al check box, sebe ser lo mismo para el resto de tool
                                   <DataGridTemplateColumn Header="Cambiar">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center"
                                                        IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                                <DataGridTextColumn Header="Coordenada"   Binding="{Binding CoordeParaOrden, Converter={StaticResource DoubleToSingleDecimalConverter}}" IsReadOnly="True" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>

                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Gris Actual"   Binding="{Binding Nombre_Actual}" IsReadOnly="True" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>

                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Gris NUevo"   Binding="{Binding Nombre_Nuevo, Mode=TwoWay}" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                            <Setter Property="TextAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCambiarColor}" Value="True">
                                                    <Setter Property="Background" Value="#FF50F150"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsCambiarColor}" Value="False">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Vistas">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ItemsControl ItemsSource="{Binding ListaGridAsociadosObs}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal" 
                                                                    VerticalAlignment="Center"
                                                                    >
                                                            <TextBox Text="{Binding Nombre_Nuevo, Mode=TwoWay}" VerticalContentAlignment="Center" Width="250">
                                                                <TextBox.Style>
                                                                    <Style TargetType="TextBox">
                                                                        <Setter Property="Background" Value="Transparent"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsCambiarColor}" Value="True">
                                                                                <Setter Property="Background"  Value="#FFE0B2B2"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsCambiarColor}" Value="False">
                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBox.Style>
                                                            </TextBox>
                                                            <Label Margin="5,0,0,0">Visualizaon:</Label>
                                                            <RadioButton VerticalContentAlignment="Center" Checked="OnPrenderView">On</RadioButton>
                                                            <RadioButton IsChecked="True" VerticalContentAlignment="Center"  Margin="5,0,5,0"  Checked="OnOcutarView">Off</RadioButton>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Button Name="bton_cambiarOtro" Grid.Row="4" Grid.Column="2"   Height="25" Click="BExternalMethod1_Click" Width="60"  HorizontalAlignment="Center" Content="Cambiar"  Background="#FFE1E1E1" BorderBrush="#FFB2B2B2"></Button>
                        <Button Name="CerrarOtro" Grid.Row="4" Grid.Column="4"   Height="25"  Width="60"  HorizontalAlignment="Center" Content="Cerrar" Click="Cerrar_estruc_Click"  Background="#FFE1E1E1" BorderBrush="#FFB2B2B2"></Button>

                    </Grid>

                </GroupBox>

            </TabItem>


        </TabControl>


    </Grid>
</Window>
    